#include "LedCube.h"
#include <SPI.h>

/*
 * Connect the CS pin (5) to the clock pin of the shift register
 * Connect the SCK pin (18) to the latch pin of the shift register
 * Connect the MOSI pin (23) to the data pin of the shift register
 */


unsigned long previousMillis = 0;
const long interval = 1000;
int frame = 0;

LedCube Cube(10, CtrlFIRST);

// Format [Frame][Plate][Row]
byte leds[9][8][8] = {
  {
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1}},
  {
    {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3}},
  {
    {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7}},
  {
    {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15}},
  {
    {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31}},
  {
    {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63}},
  {
    {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127}},
  {
    {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1},
  {255,255,255,255,255,255,255,255}},
  {
    {255,255,255,255,255,255,255,255},
  {127,127,127,127,127,127,127,127},
  {63,63,63,63,63,63,63,63},
  {31,31,31,31,31,31,31,31},
  {15,15,15,15,15,15,15,15},
  {7,7,7,7,7,7,7,7},
  {3,3,3,3,3,3,3,3},
  {1,1,1,1,1,1,1,1}}};

byte clear[8][8] = {{1,0,0,0,0,0,0,1},{2,0,0,0,0,0,0,2},{3,0,0,0,0,0,0,3},{4,0,0,0,0,0,0,4},{5,0,0,0,0,0,0,5},{6,0,0,0,0,0,0,6},{7,0,0,0,0,0,0,7},{8,0,0,0,0,0,0,8}};
byte layeres[8][8] = {{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8},{1, 2, 3, 4, 5, 6, 7, 8}};

void setup()
{
  Serial.begin(9600);
}

void loop() 
{
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval)
  {
    previousMillis = currentMillis;
    frame++;
    if(frame==8){
      frame=0;
    }
  }
  Cube.show(leds[frame]);
  //Cube.updateShiftRegisters(clear[frame], 255);
  
  Serial.println( frame);
  
//Cube.test();
  //Cube.updateShiftRegisters(layeres, 255);
/*
  for (int j = 0; j < 256; j++){
    Cube.show(layeres);
    //Cube.updateShiftRegisters(layeres, j);
    delay(10);
  }*/
}
